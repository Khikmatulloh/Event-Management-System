"""create users, events, registrationssss

Revision ID: 0ed119129877
Revises: 791b423e4d99
Create Date: 2025-07-28 17:47:33.286544

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0ed119129877'
down_revision: Union[str, Sequence[str], None] = '791b423e4d99'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registrations_id'), 'registrations', ['id'], unique=False)
    op.drop_table('event_registrations')
    op.add_column('events', sa.Column('date', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.drop_column('events', 'created_at')
    op.drop_column('events', 'start_datetime')
    op.drop_column('events', 'end_datetime')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('end_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('start_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_column('events', 'date')
    op.create_table('event_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('confirmed', 'cancelled', 'waitlist', name='registrationstatus'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('event_registrations_event_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('event_registrations_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('event_registrations_pkey'))
    )
    op.drop_index(op.f('ix_registrations_id'), table_name='registrations')
    op.drop_table('registrations')
    # ### end Alembic commands ###
